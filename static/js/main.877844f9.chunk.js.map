{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","title","a","fetch","response","json","FindMovie","useState","setTitle","setMovie","error","setError","searchMovie","newMovie","clearForm","onSubmit","event","preventDefault","addMovie","htmlFor","value","onChange","target","type","id","placeholder","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCffC,G,MAAU,+CAET,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,GAAJ,OAAcE,IADrC,cACCG,EADD,yBAGEA,EAASC,QAHX,4C,sBCOA,IAAMC,EAA6B,SAACnB,GACzC,MAA0BoB,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcqB,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAOMC,EAAW,uCAAG,4BAAAV,EAAA,sEACKF,EAASC,GADd,QACZY,EADY,SAMhBJ,EAASI,GACTF,GAAS,IAHTA,GAAS,GAJO,2CAAH,qDAWXG,EAAY,WAChBN,EAAS,IACTG,GAAS,IAqBX,OACE,qCACE,uBAAMtB,UAAU,aAAa0B,SAZZ,SAACC,GACpBA,EAAMC,iBAEF7B,GACFD,EAAM+B,SAAS9B,GAGjB0B,KAKE,UACE,sBAAKzB,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,wBAEE,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,MAAOnB,EACPoB,SAhDO,SAACL,GACpBR,EAASQ,EAAMM,OAAOF,OACtBT,GAAS,IA+CGY,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpC,UAAU,yBAKfqB,GACC,mBAAGrB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,kBACVqC,QAASd,EAHX,4BASF,qBAAKvB,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,oBACVqC,QA1DQ,WACdtC,GACFD,EAAM+B,SAAS9B,GAGjB0B,KAkDQ,qCAWN,sBAAKzB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAU,cAAC,EAAD,CAAWA,MAAOA,WClGxBuC,EAAgB,WAC3B,MAA4BpB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAegC,EAAf,KAQA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAW6B,SAZA,SAACL,GACXjB,EAAOiC,MAAK,SAAAzC,GAAK,OAAIA,EAAMU,SAAWe,EAASf,WAClD8B,EAAU,GAAD,mBAAKhC,GAAL,CAAaiB,cCN5BiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.877844f9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=c256229b&t=';\n\nexport async function getMovie(title: string) {\n  const response = await fetch(`${API_URL}${title}`);\n\n  return response.json();\n}\n","import { useState, ChangeEvent } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError(false);\n  };\n\n  const searchMovie = async () => {\n    const newMovie = await getMovie(title);\n\n    if (!newMovie) {\n      setError(true);\n    } else {\n      setMovie(newMovie);\n      setError(false);\n    }\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setError(false);\n  };\n\n  const addNewMovie = () => {\n    if (movie) {\n      props.addMovie(movie);\n    }\n\n    clearForm();\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie) {\n      props.addMovie(movie);\n    }\n\n    clearForm();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                value={title}\n                onChange={handleChange}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n              />\n            </div>\n          </label>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (<MovieCard movie={movie} />)}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}